# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- job: tests
  strategy:
    matrix:
      linux-py35:
        imageName: 'ubuntu-16.04'
        python.version: '3.5'

      linux-py36:
        imageName: 'ubuntu-16.04'
        python.version: '3.6'

      linux-py37:
        imageName: 'ubuntu-16.04'
        python.version: '3.7'

      windows-py35:
        imageName: 'vs2017-win2016'
        python.version: '3.5'

      windows-py36:
        imageName: 'vs2017-win2016'
        python.version: '3.6'

      windows-py37:
        imageName: 'vs2017-win2016'
        python.version: '3.7'

  pool:
    vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade poetry
    displayName: 'Install poetry'

  - script: |
      python -m pip install --upgrade tox
    displayName: 'Install tox'

  - script: tox -e py
    displayName: 'Run Tox'

- job: style
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - script: |
      python -m pip install --upgrade poetry
    displayName: 'Install poetry'

  - script: |
      python -m pip install --upgrade tox
    displayName: 'Install tox'

  - script: tox -e style
    displayName: 'Run flake8'
